1018 排序
基准时间限制：1 秒 空间限制：131072 KB 分值: 0 难度：基础题 收藏  关注
给出N个整数，对着N个整数进行排序
Input
第1行：整数的数量N（1 <= N <= 50000)
第2 - N + 1行：待排序的整数（-10^9 <= A[i] <= 10^9）
Output
共n行，按照递增序输出排序好的数据。
Input示例
5
5
4
3
2
1
Output示例
1
2
3
4
5

代码:
#include<iostream>
using namespace std;

template<typename T>
void quick_sort_recursive(T arr[], int start, int end) {
	if (start >= end) return;
	T mid = arr[end];
	int left = start, right = end - 1;
	while (left < right) {
		while (arr[left] < mid && left < right) left++;
		while (arr[right] >= mid && left < right) right--;
		std::swap(arr[left], arr[right]);
	}
	if (arr[left] >= arr[end])
		std::swap(arr[left], arr[end]);
	else
		left++;
	quick_sort_recursive(arr, start, left - 1);
	quick_sort_recursive(arr, left + 1, end);
}
template<typename T> //整數或浮點數皆可使用,若要使用物件(class)時必須設定"小於"(<)、"大於"(>)、"不小於"(>=)的運算子功能
void quick_sort(T arr[], int len) {
	quick_sort_recursive(arr, 0, len - 1);
} 

int main()
{
	int m,k;
	cin>>m;
	int * a = new int [m+1];
	for(int p=0;p<m;p++)
	{
		cin>>a[p];
	}
	quick_sort(a, m);
	for(k=0;k<m;k++)
	{
		cout<<a[k]<<endl;
	}
}
